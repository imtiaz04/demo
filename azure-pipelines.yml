trigger:
  branches:
    include:
      - main

pool:
  name: 'test'  # Self-hosted agent pool

variables:
  TEST_EXIT_CODE: 0

steps:

- script: |
    sudo apt-get update
    sudo apt-get install -y software-properties-common
    sudo add-apt-repository -y ppa:deadsnakes/ppa
    sudo apt-get update
    sudo apt-get install -y python3.10 python3.10-venv python3.10-dev
    sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1
    sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1
    python --version
    python -m ensurepip
  displayName: 'Install Python 3.10'

- script: |
    python -m pip install --upgrade pip
    python -m pip install -r requirements.txt
    python -m pip install pytest
  displayName: 'Install dependencies'

- script: |
    mkdir -p $(Build.SourcesDirectory)/test-results
    pytest -v --junitxml=$(Build.SourcesDirectory)/test-results/results.xml || echo "##vso[task.setvariable variable=TEST_EXIT_CODE;isOutput=true]1"
    ls -R $(Build.SourcesDirectory)/test-results
  displayName: 'Run tests and generate test report'
  continueOnError: true
  name: runTests

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/test-results/*.xml'
    failTaskOnFailedTests: false
  displayName: 'Publish test results'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)'
    ArtifactName: 'PythonApp'
    publishLocation: 'Container'
  displayName: 'Publish artifact'

- script: |
    if [ "$(runTests.TEST_EXIT_CODE)" == "1" ]; then
      echo "Tests failed â€” exiting with error code 1"
      exit 1
    else
      echo "Tests passed"
    fi
  displayName: 'Fail pipeline if tests failed'
